ARM GAS  C:\Users\PODONO~1\AppData\Local\Temp\ccJlH3bl.s 			page 1


   1              	# 1 "../Startup_Code/startup_ARMLtdGCC.S"
   1              	/* File: startup_ARMCM4.S
   0              	
   0              	
   0              	
   2              	 * Purpose: startup file for Cortex-M4 devices. Should use with 
   3              	 *   GCC for ARM Embedded Processors
   4              	 * Version: V1.4
   5              	 * Date: 09 July 2012
   6              	 * 
   7              	 * Copyright (c) 2011, 2012, ARM Limited
   8              	 * All rights reserved.
   9              	 * 
  10              	 * Redistribution and use in source and binary forms, with or without
  11              	 * modification, are permitted provided that the following conditions are met:
  12              	    * Redistributions of source code must retain the above copyright
  13              	      notice, this list of conditions and the following disclaimer.
  14              	    * Redistributions in binary form must reproduce the above copyright
  15              	      notice, this list of conditions and the following disclaimer in the
  16              	      documentation and/or other materials provided with the distribution.
  17              	    * Neither the name of the ARM Limited nor the
  18              	      names of its contributors may be used to endorse or promote products
  19              	      derived from this software without specific prior written permission.
  20              	 * 
  21              	 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  22              	 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  23              	 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24              	 * DISCLAIMED. IN NO EVENT SHALL ARM LIMITED BE LIABLE FOR ANY
  25              	 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26              	 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  27              	 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  28              	 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  29              	 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  30              	 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31              	 */
  32              	    .syntax unified
  33              	    .arch armv7-m
  34              	
  35              	#define __STARTUP_CLEAR_BSS
  36              	
  37              	#if 0
  38              	/*
  39              	 *  Stack space
  40              	 */
  41              	    .section .stack
  42              	    .align 3
  43              	#ifdef __STACK_SIZE
  44              	    .equ    Stack_Size, __STACK_SIZE
  45              	#else
  46              	    .equ    Stack_Size, 0xc00
  47              	#endif
  48              	    .globl    __StackTop
  49              	    .globl    __StackLimit
  50              	__StackLimit:
  51              	    .space    Stack_Size
  53              	__StackTop:
  55              	
ARM GAS  C:\Users\PODONO~1\AppData\Local\Temp\ccJlH3bl.s 			page 2


  56              	/*
  57              	 *  Heap space
  58              	 */
  59              	    .section .heap
  60              	    .align 3
  61              	#ifdef __HEAP_SIZE
  62              	    .equ    Heap_Size, __HEAP_SIZE
  63              	#else
  64              	    .equ    Heap_Size, 0
  65              	#endif
  66              	    .globl    __HeapBase
  67              	    .globl    __HeapLimit
  68              	__HeapBase:
  69              	    .if    Heap_Size
  70              	    .space    Heap_Size
  71              	    .endif
  73              	__HeapLimit:
  75              	
  76              	#endif
  77              	
  78              	/*
  79              	 *  Low-level reset
  80              	 */
  81              	    .text
  82              	    .thumb
  83              	    .thumb_func
  84              	    .align 2
  85              	    .globl    Reset_Handler
  87              	Reset_Handler:
  88              	
  89              	#ifndef __NO_SYSTEM_INIT
  90              	    // Low-level system initialise must be done here so to avoid WDOG timeout
  91 0000 FFF7FEFF 	    bl    SystemInitLowLevel
  92              	#endif
  93              	/*
  94              	 *     Loop to copy data from read only memory to RAM. The ranges of copy from/to are
  95              	 *     specified by following symbols evaluated in linker script (4-byte aligned).
  96              	 *
  97              	 *      __etext        : End of code section, i.e., begin of data sections to copy from.
  98              	 *      __data_start__ : Start of data area (in RAM) that data should be copied to.
  99              	 *      __data_end__   : End of data area (in RAM) that data should be copied to.
 100              	 *
 101              	 *     [__etext .. ] => [__data_start__ .. __data_end__]
 102              	 */
 103              	
 104 0004 0B49     	    ldr    r1, =__etext
 105 0006 0C4A     	    ldr    r2, =__data_start__
 106 0008 0C4B     	    ldr    r3, =__data_end__
 107              	
 108              	#if 1
 109              	/* Here are two copies of loop implemenations. First one favors code size
 110              	 * and the second one favors performance. Default uses the first one. 
 111              	 * Change to "#if 0" to use the second one */
 112              	.LC0:
 113 000a 9A42     	    cmp     r2, r3
 114 000c BEBF     	    ittt    lt
 115 000e 51F8040B 	    ldrlt   r0, [r1], #4
ARM GAS  C:\Users\PODONO~1\AppData\Local\Temp\ccJlH3bl.s 			page 3


 116 0012 42F8040B 	    strlt   r0, [r2], #4
 117 0016 F8E7     	    blt    .LC0
 118              	#else
 119              	    subs    r3, r2
 120              	    ble    .LC1    
 121              	.LC0:
 122              	    subs    r3, #4
 123              	    ldr     r0, [r1, r3]
 124              	    str     r0, [r2, r3]
 125              	    bgt    .LC0
 126              	.LC1:
 127              	#endif
 128              	
 129              	#ifdef __STARTUP_CLEAR_BSS
 130              	/*     This part of work usually is done in C library startup code. Otherwise,
 131              	 *     define this macro to enable it in this startup.
 132              	 *
 133              	 *     Loop to zero out BSS section, which uses following symbols
 134              	 *     in linker script:
 135              	 *      __bss_start__ : start of BSS section. Must align to 4
 136              	 *      __bss_end__   : end of BSS section. Must align to 4
 137              	 */
 138 0018 0949     	    ldr r1, =__bss_start__
 139 001a 0A4A     	    ldr r2, =__bss_end__
 140              	
 141 001c 0020     	    movs    r0, 0
 142              	.LC2:
 143 001e 9142     	    cmp     r1, r2
 144 0020 BCBF     	    itt    lt
 145 0022 41F8040B 	    strlt   r0, [r1], #4
 146 0026 FAE7     	    blt    .LC2
 147              	#endif /* __STARTUP_CLEAR_BSS */
 148              	
 149              	#ifndef __START
 150              	#define __START _start
 151              	#endif
 152              	#ifndef __NO_SYSTEM_INIT
 153 0028 FFF7FEFF 	    bl    SystemInit
 154              	#endif
 155              	
 156              	    // Make sure hook is provided for CMSIS (fix for KDS compiler)
 157 002c FFF7FEFF 	    bl	  	software_init_hook
 158              	
 159 0030 FFF7FEFF 	    bl    __START
 160 0034 00000000 	    .pool
 160      00000000 
 160      00000000 
 160      00000000 
 160      00000000 
 162              	    
 163              	    .end
ARM GAS  C:\Users\PODONO~1\AppData\Local\Temp\ccJlH3bl.s 			page 4


DEFINED SYMBOLS
../Startup_Code/startup_ARMLtdGCC.S:84     .text:00000000 $t
../Startup_Code/startup_ARMLtdGCC.S:87     .text:00000000 Reset_Handler
../Startup_Code/startup_ARMLtdGCC.S:160    .text:00000034 $d
                   .debug_aranges:0000000c $d

UNDEFINED SYMBOLS
SystemInitLowLevel
__etext
__data_start__
__data_end__
__bss_start__
__bss_end__
SystemInit
software_init_hook
_start
